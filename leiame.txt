// Obtendo elementos do formul√°rio
const form = document.getElementById("form"); // Seleciona o formul√°rio pelo ID.
const amount = document.getElementById("amount"); // Campo de entrada do valor.
const currency = document.getElementById("currency"); // Campo de sele√ß√£o de moeda.

// Impede que caracteres n√£o num√©ricos sejam digitados no campo "amount".
amount.addEventListener("input", () => {
    const hasCharacteresRegex = /\D+/g; // Express√£o regular para encontrar caracteres n√£o num√©ricos.
    amount.value = amount.value.replace(hasCharacteresRegex, ""); // Remove caracteres inv√°lidos.
});

// Captura o evento de envio do formul√°rio.
form.onsubmit = async (event) => {
    event.preventDefault(); // Impede o comportamento padr√£o de recarregar a p√°gina.

    console.log(currency.value); // Exibe no console a moeda escolhida pelo usu√°rio.

    switch (currency.value) {
        // Verifica se a moeda selecionada √© suportada.
        case "USD": // Caso seja USD (D√≥lar Americano).
        case "EUR": // Caso seja EUR (Euro).
        case "GBP": // Caso seja GBP (Libra Esterlina).
            await convertCurrency(amount.value, currency.value); // Chama a fun√ß√£o de convers√£o.
            break;
        default:
            console.log("Moeda n√£o suportada."); // Loga no console.
            alert("Moeda n√£o suportada."); // Notifica o usu√°rio.
    }
};

// Fun√ß√£o que busca a cota√ß√£o e realiza a convers√£o da moeda.
async function convertCurrency(amount, currency) {
    // URL da API com a moeda selecionada.
    const url = `https://economia.awesomeapi.com.br/json/last/${currency}-BRL`;

    try {
        const response = await fetch(url); // Faz uma requisi√ß√£o HTTP para a API.
        const data = await response.json(); // Converte a resposta em JSON.
        const exchangeRate = data[`${currency}BRL`].bid; // Obt√©m a taxa de c√¢mbio (campo "bid").

        // Calcula o valor convertido e formata com 2 casas decimais.
        const convertedValue = (amount * exchangeRate).toFixed(2);

        // Exibe o valor convertido no console e em um alerta.
        console.log(`Valor convertido: R$ ${convertedValue}`);
        alert(`Valor convertido para ${currency}: R$ ${convertedValue}`);
    } catch (error) {
        // Trata erros de requisi√ß√£o ou ao acessar os dados da API.
        console.error("Erro ao buscar cota√ß√£o:", error);
        alert("Erro ao obter a cota√ß√£o. Por favor, tente novamente.");
    }
}


==================================================================================================



Como posso usar a cota√ß√£o atual do dolar em javascript
Voc√™ pode usar APIs para obter a cota√ß√£o atual do d√≥lar em JavaScript. Aqui est√° um exemplo b√°sico de como fazer isso:

Escolha uma API: Algumas op√ß√µes populares incluem:

Banco Central do Brasil: API oficial com dados financeiros.

AwesomeAPI: Oferece cota√ß√µes em tempo real.

DolarApi: Simples e focada em cota√ß√µes de moedas.

Fa√ßa uma requisi√ß√£o HTTP: Use fetch ou bibliotecas como Axios para acessar os dados. Aqui est√° um exemplo com fetch:

javascript
const url = "https://economia.awesomeapi.com.br/json/last/USD-BRL";

fetch(url)
  .then(response => response.json())
  .then(data => {
    const cotacao = data.USDBRL.bid;
    console.log(`Cota√ß√£o atual do d√≥lar: R$ ${cotacao}`);
  })
  .catch(error => console.error("Erro ao buscar cota√ß√£o:", error));
Interprete os dados: A resposta geralmente vem em formato JSON. No exemplo acima, a cota√ß√£o de compra est√° no campo bid.

Se precisar de mais ajuda para integrar isso ao seu projeto, √© s√≥ avisar! üöÄ

faca a integra√ß√£o nesse codigo base: // Obtendo elementos do formulario const form = document.getElementById("form") const amount = document.getElementById("amount") const currency = document.getElementById("currency") // Recebendo somente numeros no input amount.addEventListener("input", ()=>{ const hasCharacteresRegex = /\D+/g amount.value = amount.value.replace(hasCharacteresRegex, "") }) // Captando submit do form form.onsubmit = (event) => { //event.preventDefault() console.log(currency.value) switch (currency.value) { case "USD": convertCurrency(amount.value, currency) } } //convertendo moeda function convertCurrency(amount, price, symbol,) { }
Aqui est√° a integra√ß√£o do seu c√≥digo para obter a cota√ß√£o do d√≥lar e realizar a convers√£o da moeda usando a API AwesomeAPI. O c√≥digo inclui a fun√ß√£o convertCurrency que busca a cota√ß√£o e faz a convers√£o:

javascript
// Obtendo elementos do formulario
const form = document.getElementById("form");
const amount = document.getElementById("amount");
const currency = document.getElementById("currency");

// Recebendo somente numeros no input
amount.addEventListener("input", () => {
    const hasCharacteresRegex = /\D+/g;
    amount.value = amount.value.replace(hasCharacteresRegex, "");
});

// Captando submit do form
form.onsubmit = async (event) => {
    event.preventDefault(); // Evita o envio padr√£o do formul√°rio

    console.log(currency.value);

    switch (currency.value) {
        case "USD":
            convertCurrency(amount.value, "USD");
            break;
        default:
            console.log("Moeda n√£o suportada.");
    }
};

// Convertendo moeda
async function convertCurrency(amount, currency) {
    const url = `https://economia.awesomeapi.com.br/json/last/${currency}-BRL`;

    try {
        const response = await fetch(url);
        const data = await response.json();
        const exchangeRate = data[`${currency}BRL`].bid; // Cota√ß√£o de compra
        const convertedValue = (amount * exchangeRate).toFixed(2);

        console.log(`Valor convertido: R$ ${convertedValue}`);
        alert(`Valor convertido: R$ ${convertedValue}`);
    } catch (error) {
        console.error("Erro ao buscar cota√ß√£o:", error);
        alert("Erro ao obter a cota√ß√£o. Por favor, tente novamente.");
    }
}
Explica√ß√£o das mudan√ßas:
async/await em form.onsubmit:

Tornei a fun√ß√£o ass√≠ncrona para lidar com a chamada API de forma eficiente.

Usei event.preventDefault() para evitar a submiss√£o padr√£o do formul√°rio.

Requisi√ß√£o para a API:

Na fun√ß√£o convertCurrency, o fetch obt√©m a cota√ß√£o do d√≥lar atrav√©s da URL da AwesomeAPI.

O campo bid cont√©m a cota√ß√£o de compra, usado para calcular o valor convertido.

Exibi√ß√£o do resultado:

O valor convertido √© exibido no console e tamb√©m em um alert para o usu√°rio.

Agora, quando o formul√°rio √© submetido e a moeda selecionada for "USD", o sistema buscar√° a cota√ß√£o atual e far√° a convers√£o. Voc√™ pode estender o c√≥digo para suportar outras moedas, adicionando mais casos no switch. üöÄ Se precisar de mais ajuda, √© s√≥ me chamar!

agora adione a seguintes moedas segundo o codigo html no javascript : <option value="EUR">Euro</option> <option value="GBP">Libra Esterlina</option>
Aqui est√° a atualiza√ß√£o do seu c√≥digo para incluir a convers√£o de Euro (EUR) e Libra Esterlina (GBP) ao lado do d√≥lar (USD). Adicionei os casos apropriados no switch e ajustei a fun√ß√£o para tratar essas moedas:

javascript
// Obtendo elementos do formulario
const form = document.getElementById("form");
const amount = document.getElementById("amount");
const currency = document.getElementById("currency");

// Recebendo somente n√∫meros no input
amount.addEventListener("input", () => {
    const hasCharacteresRegex = /\D+/g;
    amount.value = amount.value.replace(hasCharacteresRegex, "");
});

// Captando submit do form
form.onsubmit = async (event) => {
    event.preventDefault(); // Evita o envio padr√£o do formul√°rio

    console.log(currency.value);

    switch (currency.value) {
        case "USD":
        case "EUR":
        case "GBP":
            await convertCurrency(amount.value, currency.value);
            break;
        default:
            console.log("Moeda n√£o suportada.");
            alert("Moeda n√£o suportada.");
    }
};

// Convertendo moeda
async function convertCurrency(amount, currency) {
    const url = `https://economia.awesomeapi.com.br/json/last/${currency}-BRL`;

    try {
        const response = await fetch(url);
        const data = await response.json();
        const exchangeRate = data[`${currency}BRL`].bid; // Cota√ß√£o de compra
        const convertedValue = (amount * exchangeRate).toFixed(2);

        console.log(`Valor convertido: R$ ${convertedValue}`);
        alert(`Valor convertido para ${currency}: R$ ${convertedValue}`);
    } catch (error) {
        console.error("Erro ao buscar cota√ß√£o:", error);
        alert("Erro ao obter a cota√ß√£o. Por favor, tente novamente.");
    }
}
O que foi adicionado:
Casos para EUR e GBP no switch:

Agora o c√≥digo verifica se a moeda selecionada √© USD, EUR ou GBP e chama a fun√ß√£o convertCurrency adequadamente.

Adapta√ß√£o da fun√ß√£o convertCurrency:

A URL √© dinamicamente constru√≠da com base na moeda selecionada.

A cota√ß√£o √© acessada do campo correspondente, por exemplo, EURBRL ou GBPBRL.

Suporte para m√∫ltiplas moedas:

Ao usar um √∫nico m√©todo para tratar moedas diferentes, o c√≥digo ficou mais escal√°vel e f√°cil de manter.

Se voc√™ precisar de mais alguma melhoria ou personaliza√ß√£o, √© s√≥ me avisar! üòä

pode me explicar cada linha do codigo e comentar o codigo novamente adicionando todos os detalhes, seja o mais detalhista possivel na explica√ß√£o
Claro! Vou explicar cada linha do c√≥digo e, em seguida, comentar o c√≥digo de maneira detalhada para que voc√™ possa compreender cada parte. Vamos l√°:

Explica√ß√£o detalhada do c√≥digo
Declara√ß√£o e manipula√ß√£o dos elementos do formul√°rio
javascript
const form = document.getElementById("form");
const amount = document.getElementById("amount");
const currency = document.getElementById("currency");
Essas tr√™s linhas est√£o selecionando elementos HTML com os IDs form, amount e currency:

form √© o formul√°rio que ser√° submetido.

amount √© o campo onde o usu√°rio insere o valor que deseja converter.

currency √© o select HTML onde o usu√°rio escolhe a moeda (USD, EUR, GBP, etc.).

Garantindo que somente n√∫meros sejam inseridos no campo amount
javascript
amount.addEventListener("input", () => {
    const hasCharacteresRegex = /\D+/g;
    amount.value = amount.value.replace(hasCharacteresRegex, "");
});
Aqui estamos:

Adicionando um ouvinte de eventos (addEventListener) para o evento input, que √© acionado sempre que o usu√°rio digita algo no campo.

Definindo uma express√£o regular (/\D+/g) que encontra qualquer caractere que n√£o seja um n√∫mero (\D significa "n√£o d√≠gitos").

Utilizando o m√©todo replace para remover caracteres inv√°lidos e permitir que somente n√∫meros fiquem no campo.

Isso garante que o campo amount tenha apenas valores num√©ricos.

Interceptando o evento de envio do formul√°rio
javascript
form.onsubmit = async (event) => {
    event.preventDefault(); // Evita o envio padr√£o do formul√°rio.

    console.log(currency.value); // Exibe no console a moeda selecionada.

    switch (currency.value) {
        case "USD":
        case "EUR":
        case "GBP":
            await convertCurrency(amount.value, currency.value);
            break;
        default:
            console.log("Moeda n√£o suportada.");
            alert("Moeda n√£o suportada.");
    }
};
Explica√ß√£o:

A fun√ß√£o onsubmit captura o evento de envio do formul√°rio.

event.preventDefault() impede que o formul√°rio recarregue a p√°gina.

A moeda selecionada no select √© exibida no console com console.log(currency.value).

O switch verifica o valor da moeda:

Caso seja "USD", "EUR" ou "GBP", a fun√ß√£o convertCurrency √© chamada para realizar a convers√£o.

Caso contr√°rio, exibe um alerta indicando que a moeda n√£o √© suportada.

Fun√ß√£o que realiza a convers√£o da moeda
javascript
async function convertCurrency(amount, currency) {
    const url = `https://economia.awesomeapi.com.br/json/last/${currency}-BRL`;

    try {
        const response = await fetch(url); // Faz uma requisi√ß√£o √† API.
        const data = await response.json(); // Transforma a resposta em JSON.
        const exchangeRate = data[`${currency}BRL`].bid; // Obt√©m a taxa de convers√£o (campo 'bid').
        const convertedValue = (amount * exchangeRate).toFixed(2); // Converte o valor e formata com duas casas decimais.

        console.log(`Valor convertido: R$ ${convertedValue}`); // Exibe o valor no console.
        alert(`Valor convertido para ${currency}: R$ ${convertedValue}`); // Exibe o valor em um alerta.
    } catch (error) {
        console.error("Erro ao buscar cota√ß√£o:", error); // Exibe o erro no console, caso ocorra.
        alert("Erro ao obter a cota√ß√£o. Por favor, tente novamente."); // Notifica o usu√°rio em caso de erro.
    }
}
Passo a passo do funcionamento:

A URL da API √© constru√≠da dinamicamente usando o nome da moeda (por exemplo, USD-BRL, EUR-BRL).

√â feita uma requisi√ß√£o HTTP com o m√©todo fetch para buscar os dados da API.

Os dados retornados pela API s√£o convertidos em um objeto JSON (response.json()).

A taxa de convers√£o da moeda (bid) √© extra√≠da do JSON.

O valor inserido pelo usu√°rio (amount) √© multiplicado pela taxa de convers√£o e formatado com 2 casas decimais (toFixed(2)).

O valor convertido √© exibido no console e em um alerta.

O bloco catch captura erros durante o processo e notifica o usu√°rio.

C√≥digo comentado
Abaixo est√° o c√≥digo com coment√°rios detalhados:

javascript
// Obtendo elementos do formul√°rio
const form = document.getElementById("form"); // Seleciona o formul√°rio pelo ID.
const amount = document.getElementById("amount"); // Campo de entrada do valor.
const currency = document.getElementById("currency"); // Campo de sele√ß√£o de moeda.

// Impede que caracteres n√£o num√©ricos sejam digitados no campo "amount".
amount.addEventListener("input", () => {
    const hasCharacteresRegex = /\D+/g; // Express√£o regular para encontrar caracteres n√£o num√©ricos.
    amount.value = amount.value.replace(hasCharacteresRegex, ""); // Remove caracteres inv√°lidos.
});

// Captura o evento de envio do formul√°rio.
form.onsubmit = async (event) => {
    event.preventDefault(); // Impede o comportamento padr√£o de recarregar a p√°gina.

    console.log(currency.value); // Exibe no console a moeda escolhida pelo usu√°rio.

    switch (currency.value) {
        // Verifica se a moeda selecionada √© suportada.
        case "USD": // Caso seja USD (D√≥lar Americano).
        case "EUR": // Caso seja EUR (Euro).
        case "GBP": // Caso seja GBP (Libra Esterlina).
            await convertCurrency(amount.value, currency.value); // Chama a fun√ß√£o de convers√£o.
            break;
        default:
            console.log("Moeda n√£o suportada."); // Loga no console.
            alert("Moeda n√£o suportada."); // Notifica o usu√°rio.
    }
};

// Fun√ß√£o que busca a cota√ß√£o e realiza a convers√£o da moeda.
async function convertCurrency(amount, currency) {
    // URL da API com a moeda selecionada.
    const url = `https://economia.awesomeapi.com.br/json/last/${currency}-BRL`;

    try {
        const response = await fetch(url); // Faz uma requisi√ß√£o HTTP para a API.
        const data = await response.json(); // Converte a resposta em JSON.
        const exchangeRate = data[`${currency}BRL`].bid; // Obt√©m a taxa de c√¢mbio (campo "bid").

        // Calcula o valor convertido e formata com 2 casas decimais.
        const convertedValue = (amount * exchangeRate).toFixed(2);

        // Exibe o valor convertido no console e em um alerta.
        console.log(`Valor convertido: R$ ${convertedValue}`);
        alert(`Valor convertido para ${currency}: R$ ${convertedValue}`);
    } catch (error) {
        // Trata erros de requisi√ß√£o ou ao acessar os dados da API.
        console.error("Erro ao buscar cota√ß√£o:", error);
        alert("Erro ao obter a cota√ß√£o. Por favor, tente novamente.");
    }
}
Se voc√™ tiver d√∫vidas sobre qualquer trecho ou quiser expandir o c√≥digo para incluir novas funcionalidades, estou √† disposi√ß√£o para ajudar! üöÄ
